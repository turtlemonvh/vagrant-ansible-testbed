---
- hosts: default
  sudo: yes
  gather_facts: yes
  tasks:
    # Needed for changing some configuration files
    - name: Install selinux bindings
      yum: pkg={{item}} state=latest
      with_items:
        - libselinux-python

    # Try to fix unicode errors
    - name: Update bashrc
      template:
        src: bash_settings/bashrc.j2
        dest: /home/vagrant/.bashrc
        owner: vagrant
        group: vagrant
        mode: 0644
    - name: Make bashrc active
      shell: . /home/vagrant/.bashrc

    # Install development tools
    # See: http://toomuchdata.com/2014/02/16/how-to-install-python-on-centos/
    - name: install the 'Development tools' package group
      yum: name="@Development tools" state=present

    # Install yaml
    - shell: wget http://pyyaml.org/download/libyaml/yaml-0.1.6.tar.gz
      args:
        chdir: /tmp
        creates: /tmp/yaml-0.1.6.tar.gz
    - shell: tar xzvf yaml-0.1.6.tar.gz
      args:
        chdir: /tmp
        creates: /tmp/yaml-0.1.6/
    - shell: ./configure --prefix=/usr/local
      args:
        chdir: /tmp/yaml-0.1.6/
        creates: /tmp/yaml-0.1.6/Makefile
    - shell: make
      args:
        chdir: /tmp/yaml-0.1.6
        creates: /tmp/yaml-0.1.6/yaml-0.1.pc
    - shell: make install
      args:
        chdir: /tmp/yaml-0.1.6
        creates: /usr/local/lib/libyaml.so

    # Some of these are needed for scipy stack
    # See: http://deeplearning.net/software/theano/install_centos6.html#install-centos6
    - name: Install packages
      yum: pkg={{item}} state=latest
      #when: ansible_os_family == "Debian"  # Use to skip for now
      with_items:
        - git
        # For compiling python
        - zlib-devel
        - bzip2-devel
        - openssl-devel
        - ncurses-devel
        - sqlite-devel
        - readline-devel
        - tk-devel
        - gdbm-devel
        - db4-devel
        - libpcap-devel
        - xz-devel
        # Numpy and Scipy dependencies
        - gcc
        - gcc-gfortran
        - gcc-c++
        - atlas
        - atlas-devel
        - blas
        - blas-devel
        - lapack
        - lapack-devel
        - libxml2-devel
        - libxslt-devel
        - libffi-devel
        # Command line tools
        - mlocate
        - python-pycurl
        - python-devel
        - python-setuptools
        # Needed for matplotlib
        - freetype
        - freetype-devel
        - libpng
        - libpng-devel
        - readline

    # From https://github.com/ansible/ansible-examples/blob/master/mongodb/roles/common/tasks/main.yml
    # May want to also: http://www.rackspace.com/knowledge_center/article/install-the-epel-ius-and-remi-repositories-on-centos-and-red-hat
    - name: Create the EPEL Repository.
      template:
        src: epel/epel.repo.j2
        dest: /etc/yum.repos.d/epel.repo
        owner: root
        group: root
        mode: 0755
    - name: Create the GPG key for EPEL
      copy: src=epel/RPM-GPG-KEY-EPEL-6
            dest=/etc/pki/rpm-gpg

    - name: Install pip
      easy_install: name=pip

    - name: Install util Python packages
      pip:
        name: "{{item}}"
        state: latest
      with_items:
        - supervisor
        - python-dateutil

    # Set up installation as shared library
    - name: Update dynamic linker path for python install
      template:
        src: linked_source/ld.so.conf.j2
        dest: /etc/ld.so.conf
        owner: root
        group: root
        mode: 0644
    - name: Update the dynamic linker configuration
      command: /sbin/ldconfig

    # Install python for science!
    # Placed in /usr/local/bin/python2.7
    # Download
    - name: Download and unzip python
      shell: "{{item}}"
      args:
        chdir: /tmp
        creates: /tmp/Python-2.7.6
      with_items:
        - wget http://python.org/ftp/python/2.7.6/Python-2.7.6.tar.xz --no-check-certificate
        - tar xvf Python-2.7.6.tar.xz

    # Configure and install
    - name: Install python
      command: "{{item}}"
      args:
        chdir: /tmp/Python-2.7.6
        creates: /usr/local/bin/python2.7
      with_items:
        - ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared LDFLAGS="-Wl,-rpath /usr/local/lib"
        - make
        - make altinstall

    # https://pypi.python.org/pypi/setuptools#unix-wget
    - name: Install setuptools (includes easy_install)
      shell: "{{item}}"
      args:
        chdir: /tmp
        creates: /usr/local/bin/easy_install-2.7
      with_items:
        - wget https://bootstrap.pypa.io/ez_setup.py --no-check-certificate
        - /usr/local/bin/python2.7 ez_setup.py

    - name: Install virtualenv
      easy_install:
        name: virtualenv
        executable: /usr/local/bin/easy_install-2.7

    # FIXME: Change to work with requirements file
    - name: Install science Python packages
      pip:
        name: "{{ item }}"
        state: latest
        virtualenv: /var/venv
        virtualenv_command: /usr/local/bin/virtualenv-2.7
      with_items:
        - ansible  ## Having problems with pycrypto outside of the virtualenv
        - ipython
        - sympy
        - numpy
        - scipy
        - pandas
        - networkx
        - nltk
        - scikit-learn
        # matplotlib dependencies
        - six
        - python-dateutil
        - tornado
        # for ipython notebook
        - pyzmq
        - sphinx
        - jinja2
        - pygments
        - nose
        - readline

    # Needed because a newer version of freetype is needed
    # See: http://matplotlib.org/users/installing.html#required-dependencies
    # This is a stop gap until either of the following:
    # - v1.4.1 is released, which allows older versions of freetype
    # - I write something to upgrade freetype version (which I think I've done before...)
    # FIXME: This is still failing; UnicodeDecodeError
    #- name: Install older matplotlib
    #  pip:
    #    name: matplotlib
    #    state: present
    #    version: 1.3.1
    #    virtualenv: /var/venv
    #    virtualenv_command: /usr/local/bin/virtualenv-2.7

    # FIXME: Change to work with requirements file
    - name: Install web Python packages
      pip:
        name: "{{ item }}"
        state: latest
        virtualenv: /var/venv
        virtualenv_command: /usr/local/bin/virtualenv-2.7
      with_items:
        - BeautifulSoup
        - Flask
        - Jinja2
        - PyGithub
        - PyYAML
        - Werkzeug
        - beautifulsoup4
        - facebook-sdk
        - feedparser
        - google-api-python-client
        - python-gflags
        - httplib2
        - oauthlib
        - prettytable
        - python-linkedin
        - readline
        - requests
        - requests-oauthlib
        - twitter
        - wsgiref
        - oauth2
        - twitter-text-py

    # IPython
    - name: Make sure that the notebooks directory exists
      file:
        path: "{{ shared_folders.notebooks }}"
        state: directory
        owner: "{{ dst_username }}"
        group: "{{ dst_username }}"
    - name: Make sure that the ipython config directory exists
      file:
        path: "/home/{{ dst_username }}/.ipython/profile_dst"
        state: directory
        owner: "{{ dst_username }}"
        group: "{{ dst_username }}"
    - name: Update IPython configuration
      template: src=ipython_notebook_config.py.j2
                dest=/home/{{ dst_username }}/.ipython/profile_dst/ipython_notebook_config.py
                owner={{ dst_username }} group={{ dst_username }} mode=0644 backup=true
    
    # Setup files from https://github.com/Supervisor/initscripts/
    - name: Make sure that the supervisord log directory exists
      file:
        path: /var/log/supervisord
        state: directory
        owner: "{{ dst_username }}"
        group: "{{ dst_username }}"
    - name: Make sure that the supervisord unix socket
      file:
        path: /tmp/supervisor.sock
        state: touch
    - name: Update supervisord initd
      template: src=supervisord/initd.j2
                dest=/etc/rc.d/init.d/supervisord
                owner=root group=root mode=0755
    - name: Update supervisord sysconfig
      template: src=supervisord/sysconfig.j2
                dest=/etc/sysconfig/supervisord
                owner=root group=root mode=0755
    - name: Update supervisord conf
      template: src=supervisord/supervisord.conf.j2
                dest=/etc/supervisord.conf
                owner=root group=root mode=0755
    - name: Ensure supervisord is running (and automatically at boot time)
      action: service
        name: supervisord
        state: started
        enabled: yes

    - name: Update search database
      shell: updatedb

